<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- 1.约束文件: 可以打开看的
    http://mybatis.org/dtd/mybatis-3-config.dtd
    约束文件的作用:定义和限制当前文件中可以使用的标签和属性,以及标签出现的顺序-->
<configuration>

    <settings>
        <!--配置日志 -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>

    <typeAliases>
<!--        第一种语法格式
            type : java类型的全限定名称 (自定义类型)
            alias:自定义别名

            优点: 别名可以自定义
            缺点:每个类型必须单独定义
-->
<!--        <typeAlias type="com.nguyenxb.entity.Student" alias="stu" />-->
<!--        <typeAlias type="com.nguyenxb.pojo.QueryParam" alias="qp"></typeAlias>-->

<!--        第二种方法
            name : 包名 ,mybatis会把这个包中所有类名作为别名(不用区分大小写)
            优点:使用方便,一次给多个类定义别名
            缺点: 别名不能自定义,必须是类名
-->
        <package name="com.nguyenxb.entity"/>

    </typeAliases>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <!--配置数据源: 创建Connection对象-->
            <dataSource type="POOLED">
                <!--driver:驱动的内容-->
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <!--连接数据库的url: 不能直接使用 & 符号,要将其转换为 html 实体即 &amp; 代表的就是 & 符号 -->
                <property name="url" value="jdbc:mysql://localhost:3306/ssm?
                useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf-8"/>
                <!--用户名-->
                <property name="username" value="root"/>
                <!--用户密码-->
                <property name="password" value="root"/>
            </dataSource>
        </environment>
    </environments>
    <!--指定其他mapper文件的位置:
            目的: 使用这里的连接数据库信息来执行其他文件的sql语句-->
    <!--Enter the path to your mapper file -->
    <mappers>
        <mapper resource="com\nguyenxb\dao\StudentDao.xml"/>
    </mappers>
</configuration>
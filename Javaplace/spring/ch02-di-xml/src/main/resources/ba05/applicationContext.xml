<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    引用类型的自动注入: spring框架根据某些规则库给引用类型赋值.不用手动赋值了.
         使用的常用规则是byName,byType.
         1.byName(按照名字注入) : java 类中引用类型的属性名和spring容器中(配置文件)<bean>的
            id名称一样,并且数据数据类型是一样的,这样的容器中的bean,spring就能够自动赋值给引用类型.
         语法规则:
         <bean id="xx" class="yyy" autowire="byName>
            简单类型属性赋值
         </bean>

         2.byType(按类型注入) : java类中的引用类型和spring容器中(配置文件)<bean>的
         class属性是同源关系,这样的bean能够赋值给引用类型.

         同源就是一类的意思:
         1. java类中的引用类型的数据类型和bean的class的值是一样的.
         2. java类中的引用类型的数据类型和bean的class的值是父子类关系的.
         3. java类中的引用类型的数据类型和bean的class的值接口是实现类关系的.
        语法:
         <bean id="xx" class="yyy" autowire="byType>
            简单类型属性赋值
         </bean>
-->
<!--   byName 使用name属性实现构造方法-->
    <bean id="mystudent" class="com.nguyenxb.ba05.Student" autowire="byName">
       <property name="name" value="张三"/>
        <property name="age" value="28"/>
    </bean>

<!--    声明School对象-->
    <bean id="school" class="com.nguyenxb.ba05.School">
        <property name="name" value="05xx大学"/>
        <property name="address" value="05xx大学路"/>
    </bean>
</beans>